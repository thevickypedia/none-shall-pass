name: none-shall-pass
description: Run validations against hyperlinks in all markdown files (including Wiki pages)
inputs:
  owner:
    description: Owner/Organization of the repository
    required: false
    default: ${{ github.repository_owner }}
  repo:
    description: Name of the repository
    required: false
    default: ${{ github.event.repository.name }}
  fail:
    description: Flag to fail
    required: false
    default: "true"
  debug:
    description: Debug flag
    required: false
    default: "false"
  excludeHostnames:
    description: Hostnames for which the failure should be ignored
    required: false
    default: ""
outputs: {}
runs:
  using: composite
  steps:
    - name: Run none-shall-pass
      run: |
          response=$(curl -sL "https://api.github.com/repos/thevickypedia/none-shall-pass-rustic/releases/latest")
          release_id=$(echo "$response" | jq -r '.id')
          tag_name=$(echo "$response" | jq -r '.tag_name')
          published_at=$(echo "$response" | jq -r '.published_at')
          asset_id=$(echo "$response" | jq -r '.assets[0].id')
          echo "'none-shall-pass-rustic' $tag_name publised at $published_at"
          echo "Latest Release ID: $release_id"
          echo "Asset ID: $asset_id"
          # download_url="https://api.github.com/repos/thevickypedia/none-shall-pass-rustic/releases/assets/$asset_id"
          download_url=$(echo "$response" | jq -r '.assets[0].browser_download_url')
          curl -o asset -LH "Accept: application/octet-stream" "$download_url"
          chmod +x asset
          ./asset ${{ inputs.owner }} ${{ inputs.repo }} ${{ inputs.fail }} ${{ inputs.debug }} ${{ inputs.excludeHostnames }}
branding:
  icon: check-square
  color: gray-dark
